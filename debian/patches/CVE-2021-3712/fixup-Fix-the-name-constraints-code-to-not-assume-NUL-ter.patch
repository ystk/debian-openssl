From: Matt Caswell <matt@openssl.org>
Date: Mon, 23 Aug 2021 14:01:08 +0100
Subject: fixup! Fix the name constraints code to not assume NUL terminated
 strings

---
 crypto/x509v3/v3_ncons.c | 36 +++++++++++-------------------------
 1 file changed, 11 insertions(+), 25 deletions(-)

Index: openssl-1.0.1t/crypto/x509v3/v3_ncons.c
===================================================================
--- openssl-1.0.1t.orig/crypto/x509v3/v3_ncons.c	2021-10-22 17:10:13.524202363 +0200
+++ openssl-1.0.1t/crypto/x509v3/v3_ncons.c	2021-10-22 17:10:13.520202364 +0200
@@ -110,28 +110,13 @@
 #define IA5_OFFSET_LEN(ia5base, offset) \
     ((ia5base)->length - ((unsigned char *)(offset) - (ia5base)->data))
 
-/* Like strchr but for ASN1_IA5STRING. Additionally you can specify the
+/* Like memchr but for ASN1_IA5STRING. Additionally you can specify the
  * starting point to search from
  */
-static char *ia5strchr(ASN1_IA5STRING *str, const char *start, int c)
-{
-    int i;
-    int offset = (int)(start - (char *)str->data);
-
-    /* Should not happen */
-    if (offset > str->length || offset < 0)
-        return NULL;
-
-    for (i = offset; i < str->length && str->data[i] != c; i++);
-
-    if (i == str->length)
-        return NULL;
-
-    return (char *)&str->data[i];
-}
+# define ia5memchr(str, start, c) memchr(start, c, IA5_OFFSET_LEN(str, start))
 
-/* Like strrchr but for ASN1_IA5STRING */
-static char *ia5strrchr(ASN1_IA5STRING *str, int c)
+/* Like memrrchr but for ASN1_IA5STRING */
+static char *ia5memrchr(ASN1_IA5STRING *str, int c)
 {
     int i;
 
@@ -469,8 +454,8 @@
 {
     const char *baseptr = (char *)base->data;
     const char *emlptr = (char *)eml->data;
-    const char *baseat = ia5strrchr(base, '@');
-    const char *emlat = ia5strrchr(eml, '@');
+    const char *baseat = ia5memrchr(base, '@');
+    const char *emlat = ia5memrchr(eml, '@');
     size_t basehostlen, emlhostlen;
 
     if (!emlat)
@@ -513,7 +498,7 @@
 {
     const char *baseptr = (char *)base->data;
     const char *hostptr = (char *)uri->data;
-    const char *p = ia5strchr(uri, (char *)uri->data, ':');
+    const char *p = ia5memchr(uri, (char *)uri->data, ':');
     int hostlen;
 
     /* Check for foo:// and skip past it */
@@ -528,10 +513,10 @@
 
     /* Look for a port indicator as end of hostname first */
 
-    p = ia5strchr(uri, hostptr, ':');
+    p = ia5memchr(uri, hostptr, ':');
     /* Otherwise look for trailing slash */
     if (p == NULL)
-        p = ia5strchr(uri, hostptr, '/');
+        p = ia5memchr(uri, hostptr, '/');
 
     if (p == NULL)
         hostlen = IA5_OFFSET_LEN(uri, hostptr);
