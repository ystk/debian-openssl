From 8f8d7d2796ca710184453ba4a300ad7d54d7f1a1 Mon Sep 17 00:00:00 2001
From: Matt Caswell <matt@openssl.org>
Date: Mon, 22 Feb 2016 10:27:18 +0000
Subject: [PATCH] Fix BN_hex2bn/BN_dec2bn NULL ptr/heap corruption

---
 crypto/bn/bn.h       | 14 ++++++++++++--
 crypto/bn/bn_print.c | 13 +++++++++----
 2 files changed, 21 insertions(+), 6 deletions(-)

Index: openssl-1.0.1k/crypto/bn/bn.h
===================================================================
--- openssl-1.0.1k.orig/crypto/bn/bn.h
+++ openssl-1.0.1k/crypto/bn/bn.h
@@ -125,6 +125,7 @@
 #ifndef HEADER_BN_H
 #define HEADER_BN_H
 
+#include <limits.h>
 #include <openssl/e_os2.h>
 #ifndef OPENSSL_NO_FP_API
 #include <stdio.h> /* FILE */
@@ -696,8 +697,17 @@ const BIGNUM *BN_get0_nist_prime_521(voi
 
 /* library internal functions */
 
-#define bn_expand(a,bits) ((((((bits+BN_BITS2-1))/BN_BITS2)) <= (a)->dmax)?\
-	(a):bn_expand2((a),(bits+BN_BITS2-1)/BN_BITS2))
+# define bn_expand(a,bits) \
+    ( \
+        bits > (INT_MAX - BN_BITS2 + 1) ? \
+            NULL \
+        : \
+            (((bits+BN_BITS2-1)/BN_BITS2) <= (a)->dmax) ? \
+                (a) \
+            : \
+                bn_expand2((a),(bits+BN_BITS2-1)/BN_BITS2) \
+    )
+
 #define bn_wexpand(a,words) (((words) <= (a)->dmax)?(a):bn_expand2((a),(words)))
 BIGNUM *bn_expand2(BIGNUM *a, int words);
 #ifndef OPENSSL_NO_DEPRECATED
Index: openssl-1.0.1k/crypto/bn/bn_print.c
===================================================================
--- openssl-1.0.1k.orig/crypto/bn/bn_print.c
+++ openssl-1.0.1k/crypto/bn/bn_print.c
@@ -58,6 +58,7 @@
 
 #include <stdio.h>
 #include <ctype.h>
+#include <limits.h>
 #include "cryptlib.h"
 #include <openssl/buffer.h>
 #include "bn_lcl.h"
@@ -180,8 +181,10 @@ int BN_hex2bn(BIGNUM **bn, const char *a
 
 	if (*a == '-') { neg=1; a++; }
 
-	for (i=0; isxdigit((unsigned char) a[i]); i++)
-		;
+        for (i = 0; i <= (INT_MAX/4) && isxdigit((unsigned char)a[i]); i++)
+            ;
+        if (i > INT_MAX/4)
+            goto err;
 
 	num=i+neg;
 	if (bn == NULL) return(num);
@@ -197,7 +200,7 @@ int BN_hex2bn(BIGNUM **bn, const char *a
 		BN_zero(ret);
 		}
 
-	/* i is the number of hex digests; */
+        /* i is the number of hex digits */
 	if (bn_expand(ret,i*4) == NULL) goto err;
 
 	j=i; /* least significant 'hex' */
@@ -246,8 +249,10 @@ int BN_dec2bn(BIGNUM **bn, const char *a
 	if ((a == NULL) || (*a == '\0')) return(0);
 	if (*a == '-') { neg=1; a++; }
 
-	for (i=0; isdigit((unsigned char) a[i]); i++)
-		;
+        for (i = 0; i <= (INT_MAX/4) && isdigit((unsigned char)a[i]); i++)
+            ;
+        if (i > INT_MAX/4)
+            goto err;
 
 	num=i+neg;
 	if (bn == NULL) return(num);
@@ -264,7 +269,7 @@ int BN_dec2bn(BIGNUM **bn, const char *a
 		BN_zero(ret);
 		}
 
-	/* i is the number of digests, a bit of an over expand; */
+        /* i is the number of digits, a bit of an over expand */
 	if (bn_expand(ret,i*4) == NULL) goto err;
 
 	j=BN_DEC_NUM-(i%BN_DEC_NUM);
